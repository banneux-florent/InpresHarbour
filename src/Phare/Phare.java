package Phare;

import Classes.Bateau;
import Classes.BateauPeche;
import Classes.BateauPlaisance;
import Classes.Equipage;
import Classes.Marin;
import Network.Frame;
import Network.IInOutEvent;
import Network.NetworkBasicClient;
import Network.XMLFormatter;
import java.io.StringWriter;
import java.time.LocalDate;
import java.time.Month;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author Florent & Wadi
 */
public class Phare extends javax.swing.JFrame implements IInOutEvent {

    private NetworkBasicClient networkBC = null;
    private final int PORT = 50000;

    private LinkedList<Bateau> bateauxNonIdentifies = new LinkedList<Bateau>();
    private LinkedList<Bateau> bateauxIdentifies = new LinkedList<Bateau>();
    private LinkedList<Bateau> reponsesCapitainerie = new LinkedList<Bateau>();
    private LinkedList<Bateau> confirmationsCapitainerie = new LinkedList<Bateau>();

    /**
     * Creates new form Phare
     */
    public Phare() {
        initComponents();

        try {
            this.networkBC = new NetworkBasicClient("localhost", PORT, this, this.LOnOff, this.BtnSeConnecterAuServeur);
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

        this.LBBateauxNonIdentifies.setModel(new DefaultListModel());
        this.LBBateauxIdentifies.setModel(new DefaultListModel());
        this.LBReponsesCapitainerie.setModel(new DefaultListModel());
        this.LBConfirmationsCapitainerie.setModel(new DefaultListModel());

        try {
            Marin capitaine = new Marin("Mokh", "Wad", LocalDate.of(2014, Month.JANUARY, 1), Marin.Fonction.Capitaine);
            Marin second = new Marin("Flo", "Bann", LocalDate.of(2014, Month.JANUARY, 1), Marin.Fonction.Second);
            Marin bosco = new Marin("Air", "29", LocalDate.of(2014, Month.JANUARY, 1), Marin.Fonction.Bosco);
            Marin mecanicien = new Marin("Oussama", "Achour", LocalDate.of(2014, Month.JANUARY, 1), Marin.Fonction.MaitreMecanicien);

            Equipage equipage = new Equipage(capitaine, second);
            equipage.getMarins().add(bosco);
            equipage.getMarins().add(mecanicien);

            BateauPlaisance tempBateauPlaisance = new BateauPlaisance("Bateau", "Exeter", 200, 5, BateauPlaisance.TypePermis.PlaisanceExtentionHauturiere, "BE");
            BateauPeche tempBateauPeche = new BateauPeche("BateauPeche", "Liege", 100, 10, BateauPeche.TypeDePeche.Thonier, "FR");

            tempBateauPlaisance.setEquipage(equipage);
            tempBateauPeche.setEquipage(equipage);

            bateauxNonIdentifies.add(tempBateauPlaisance);
            bateauxNonIdentifies.add(tempBateauPeche);

            ((DefaultListModel) this.LBBateauxNonIdentifies.getModel()).addElement(tempBateauPlaisance);
            ((DefaultListModel) this.LBBateauxNonIdentifies.getModel()).addElement(tempBateauPeche);

        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

    }

    public void AjouterBateauIdentifier(Bateau bateau) {
        //Supprimer de la liste non identifier et rajouter dans la liste des bateaux identifies
        bateauxIdentifies.add(bateau);
        bateauxNonIdentifies.remove(bateau);
        ((DefaultListModel) this.LBBateauxNonIdentifies.getModel()).removeElement(bateau);
        ((DefaultListModel) this.LBBateauxIdentifies.getModel()).addElement(bateau);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        PanelHeader = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        BtnSeConnecterAuServeur = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        LOnOff = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        LBBateauxNonIdentifies = new javax.swing.JList<>();
        BtnIdentifierLeBateau = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        LBBateauxIdentifies = new javax.swing.JList<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        BtnDemanderAutorisationEntrer = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        LBReponsesCapitainerie = new javax.swing.JList<>();
        BtnBateauEntrerDansLaRade = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        LBConfirmationsCapitainerie = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel10.setText("jLabel10");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Le phare");

        PanelHeader.setBackground(new java.awt.Color(220, 220, 220));

        jLabel9.setBackground(new java.awt.Color(220, 220, 220));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Le phare");
        jLabel9.setAutoscrolls(true);

        javax.swing.GroupLayout PanelHeaderLayout = new javax.swing.GroupLayout(PanelHeader);
        PanelHeader.setLayout(PanelHeaderLayout);
        PanelHeaderLayout.setHorizontalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelHeaderLayout.setVerticalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addContainerGap())
        );

        BtnSeConnecterAuServeur.setText("Se connecter au serveur");
        BtnSeConnecterAuServeur.setActionCommand("Se connecter serveur");
        BtnSeConnecterAuServeur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSeConnecterAuServeurActionPerformed(evt);
            }
        });

        jLabel2.setText("État de la connexion:");

        LOnOff.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LOnOff.setForeground(new java.awt.Color(255, 0, 0));
        LOnOff.setText("OFF");

        jLabel7.setText("Bateau(x) non-identifié(s) :");

        jScrollPane3.setViewportView(LBBateauxNonIdentifies);

        BtnIdentifierLeBateau.setText("Identifier le bateau");
        BtnIdentifierLeBateau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnIdentifierLeBateauActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(LBBateauxIdentifies);

        jLabel15.setText("Bateau(x) identifié(s) :");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Bateau(x) en attente de rentrer dans la rade");

        BtnDemanderAutorisationEntrer.setText("Demander autorisation d'entrer");
        BtnDemanderAutorisationEntrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDemanderAutorisationEntrerActionPerformed(evt);
            }
        });

        jLabel17.setText("Réponse(s) de la capitainerie :");

        jScrollPane5.setViewportView(LBReponsesCapitainerie);

        BtnBateauEntrerDansLaRade.setText("Bateau entré dans la rade");
        BtnBateauEntrerDansLaRade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBateauEntrerDansLaRadeActionPerformed(evt);
            }
        });

        jLabel18.setText("Confirmation(s) de la capitainerie :");

        jScrollPane6.setViewportView(LBConfirmationsCapitainerie);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BtnSeConnecterAuServeur, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LOnOff))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BtnIdentifierLeBateau)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(BtnDemanderAutorisationEntrer, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BtnBateauEntrerDansLaRade)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSeConnecterAuServeur)
                    .addComponent(jLabel2)
                    .addComponent(LOnOff))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnIdentifierLeBateau)
                    .addComponent(BtnDemanderAutorisationEntrer))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnBateauEntrerDansLaRade)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSeConnecterAuServeurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSeConnecterAuServeurActionPerformed
        if (this.networkBC.isDisconnected()) {
            try {
                this.networkBC.connect();
            } catch (Exception e) {
                System.err.println(e.getMessage());
            }
        } else {
            this.networkBC.disconnect();
        }
    }//GEN-LAST:event_BtnSeConnecterAuServeurActionPerformed

    private void BtnIdentifierLeBateauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnIdentifierLeBateauActionPerformed
        int selectedIndex = this.LBBateauxNonIdentifies.getSelectedIndex();
        if (selectedIndex != -1) {
            Bateau bateau = this.bateauxNonIdentifies.get(selectedIndex);

            IdentificationBateau identificationBateau = new IdentificationBateau(this, bateau);
            identificationBateau.setVisible(true);

            // Identification du bateau
            // Ouvrir fen?tre pour remplir nom/longueur
        }
    }//GEN-LAST:event_BtnIdentifierLeBateauActionPerformed

    private void BtnDemanderAutorisationEntrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDemanderAutorisationEntrerActionPerformed
        int selectedIndex = this.LBBateauxIdentifies.getSelectedIndex();
        if (selectedIndex != -1) {
            Bateau bateau = this.bateauxIdentifies.get(selectedIndex);
            
            try {
                String xmlBateau = XMLFormatter.toXML(bateau);

                // Envois bateau dans capitainerie
                Frame.send(this.networkBC, new String[]{"capitainerie_ajouter_bateau_liste", "bateau_attente_entree", xmlBateau});

                // Retrait bateau phare
                bateauxIdentifies.remove(bateau);
                ((DefaultListModel) this.LBBateauxIdentifies.getModel()).removeElement(bateau);
            } catch (Exception e) {
                System.err.println("[Phare | Error] \"" + e.getMessage() + "\"");
            }
        }
    }//GEN-LAST:event_BtnDemanderAutorisationEntrerActionPerformed

    private void BtnBateauEntrerDansLaRadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBateauEntrerDansLaRadeActionPerformed
        int selectedIndex = this.LBReponsesCapitainerie.getSelectedIndex();
        if (selectedIndex != -1) {

            Bateau bateau = this.reponsesCapitainerie.get(selectedIndex);
            try {
                String xmlBateau = XMLFormatter.toXML(bateau);

                // Envois bateau dans capitainerie
                Frame.send(this.networkBC, new String[]{"capitainerie_ajouter_bateau_liste", "bateau_entre_rade", xmlBateau});

                // Retrait bateau phare
                reponsesCapitainerie.remove(bateau);
                ((DefaultListModel) this.LBReponsesCapitainerie.getModel()).removeElement(bateau);
            } catch (Exception e) {
                System.err.println("[Phare | Error] \"" + e.getMessage() + "\"");
            }
        }
    }//GEN-LAST:event_BtnBateauEntrerDansLaRadeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Phare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Phare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Phare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Phare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Phare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBateauEntrerDansLaRade;
    private javax.swing.JButton BtnDemanderAutorisationEntrer;
    private javax.swing.JButton BtnIdentifierLeBateau;
    private javax.swing.JButton BtnSeConnecterAuServeur;
    private javax.swing.JList<String> LBBateauxIdentifies;
    private javax.swing.JList<String> LBBateauxNonIdentifies;
    private javax.swing.JList<String> LBConfirmationsCapitainerie;
    private javax.swing.JList<String> LBReponsesCapitainerie;
    private javax.swing.JLabel LOnOff;
    private javax.swing.JPanel PanelHeader;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    // IInOutEvent
    @Override
    public String getMessage() {
        return this.networkBC.getMessage();
    }

    @Override
    public String readMessage() {
        return this.networkBC.readMessage();
    }

    @Override
    public void sendMessage(String message) {
        this.networkBC.sendMessage(message);
    }

    @Override
    public void messageReceived() {
        System.out.println("[Phare | Info] [<<<] " + this.readMessage());
        try {
            Frame frame = (Frame) XMLFormatter.fromXML(this.getMessage());
            String action = frame.getAction();
            if (action.equals("phare_ajouter_bateau_liste")) {
                String list = frame.getArg(1);
                String objectXml = XMLFormatter.decode(frame.getArg(2));
                Object object = XMLFormatter.fromXML(objectXml);
                if (list.equals("reponse_capitainerie")) {

                    if (object instanceof Bateau) {
                        ((DefaultListModel) this.LBReponsesCapitainerie.getModel()).addElement((Bateau) object);
                        this.reponsesCapitainerie.add((Bateau) object);
                    } else {
                        System.err.println("[Phare | Error] Couldn't cast object received as \"Bateau\"");
                    }
                } else if (list.equals("confirmation_capitainerie")) {
                    Bateau bateau = (Bateau) object;
                    this.reponsesCapitainerie.remove(bateau);
                    ((DefaultListModel) this.LBReponsesCapitainerie.getModel()).removeElement(bateau);
                    this.confirmationsCapitainerie.add(bateau);
                    ((DefaultListModel) this.LBConfirmationsCapitainerie.getModel()).addElement(bateau);

                }
            } else if (action.equals("capitainerie_supprimer_bateau_liste")) {

            } else {
                System.err.println("Aucune action...");
            }
        } catch (Exception e) {
            System.err.println("[Phare | Error] \"" + e.getMessage() + "\"");
        }
    }

}
